# Generated by Django 3.0.6 on 2020-05-08 12:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('pid', models.CharField(blank=True, help_text='Personal Identifier Number', max_length=256, null=True, verbose_name='PID')),
                ('gender', models.CharField(choices=[('L', 'Male'), ('P', 'Female')], default='L', max_length=1, verbose_name='gender')),
                ('date_of_birth', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date of birth')),
                ('place_of_birth', models.CharField(blank=True, max_length=255, null=True, verbose_name='place of birth')),
                ('privacy', models.CharField(choices=[('anyone', 'Anyone'), ('users', 'All Users'), ('friends', 'All Friends'), ('students', 'All Students'), ('teachers', 'All Teachers'), ('employees', 'All Employees'), ('managers', 'All Managers'), ('me', 'Only Me')], default='anyone', help_text='Designates who can see this information.', max_length=128, verbose_name='privacy')),
                ('nickname', models.CharField(blank=True, max_length=256, null=True, verbose_name='nick name')),
                ('about_me', models.TextField(blank=True, max_length=128, null=True, verbose_name='about me')),
                ('religion', models.CharField(blank=True, max_length=255, null=True, verbose_name='religion')),
                ('nation', models.CharField(blank=True, max_length=255, null=True, verbose_name='nation')),
                ('reg_number', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='Reg number')),
                ('inner_id', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True, verbose_name='Inner ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created at')),
                ('education_level', models.PositiveIntegerField(choices=[(0, 'SD'), (1, 'SMP'), (2, 'SMA'), (3, 'D1'), (4, 'D2'), (5, 'D3'), (6, 'D4'), (7, 'S1'), (8, 'S2'), (9, 'S3')], default=2, verbose_name='Level')),
                ('education_institution', models.CharField(blank=True, max_length=256, null=True, verbose_name='Institution')),
                ('education_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Major')),
                ('year_graduate', models.IntegerField(blank=True, null=True, verbose_name='year graduate')),
                ('account', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User account')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
                'permissions': (('export_person', 'Can export Person'), ('import_person', 'Can import Person'), ('change_status_person', 'Can change status Person')),
            },
        ),
        migrations.CreateModel(
            name='Working',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('institution', models.CharField(max_length=256, verbose_name='institution')),
                ('date_start', models.DateField(default=django.utils.timezone.now, verbose_name='date start')),
                ('date_end', models.DateField(default=django.utils.timezone.now, verbose_name='date end')),
                ('document_link', models.URLField(blank=True, help_text='Provide support document link', null=True, verbose_name='document link')),
                ('privacy', models.CharField(choices=[('anyone', 'Anyone'), ('users', 'All Users'), ('friends', 'All Friends'), ('students', 'All Students'), ('teachers', 'All Teachers'), ('employees', 'All Employees'), ('managers', 'All Managers'), ('me', 'Only Me')], default='anyone', help_text='Designates who can see this information.', max_length=128, verbose_name='privacy')),
                ('department', models.CharField(max_length=256, verbose_name='department')),
                ('position', models.CharField(max_length=256, verbose_name='position')),
                ('description', models.TextField(blank=True, max_length=256, null=True, verbose_name='description')),
                ('employment', models.CharField(choices=[('CTR', 'Contract'), ('FXD', 'Fixed'), ('OSR', 'Outsource'), ('ELS', 'Else')], default='CTR', max_length=5, verbose_name='employment')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_histories', to='intranet_persons.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('organization', models.CharField(max_length=256, verbose_name='organization')),
                ('position', models.CharField(max_length=256, verbose_name='position')),
                ('description', models.TextField(max_length=256, verbose_name='description')),
                ('date_start', models.DateField(default=django.utils.timezone.now, verbose_name='date start')),
                ('date_end', models.DateField(default=django.utils.timezone.now, verbose_name='date end')),
                ('status', models.CharField(choices=[('ACT', 'Active'), ('INC', 'Inactive')], default='ACT', max_length=5, verbose_name='status')),
                ('document_link', models.URLField(blank=True, help_text='Provide support document link', null=True, verbose_name='document link')),
                ('privacy', models.CharField(choices=[('anyone', 'Anyone'), ('users', 'All Users'), ('friends', 'All Friends'), ('students', 'All Students'), ('teachers', 'All Teachers'), ('employees', 'All Employees'), ('managers', 'All Managers'), ('me', 'Only Me')], default='anyone', help_text='Designates who can see this information.', max_length=128, verbose_name='privacy')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volunteers', to='intranet_persons.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook', models.SlugField(blank=True, help_text='Facebook page or name', null=True)),
                ('twitter', models.SlugField(blank=True, help_text='Twitter username, without the @', max_length=255, null=True)),
                ('instagram', models.SlugField(blank=True, help_text='Instagram username, without the @', max_length=255, null=True)),
                ('youtube', models.SlugField(blank=True, help_text='Youtube channel name.', null=True)),
                ('privacy', models.CharField(choices=[('anyone', 'Anyone'), ('users', 'All Users'), ('friends', 'All Friends'), ('students', 'All Students'), ('teachers', 'All Teachers'), ('employees', 'All Employees'), ('managers', 'All Managers'), ('me', 'Only Me')], default='anyone', help_text='Designates who can see this information.', max_length=128, verbose_name='privacy')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='intranet_persons.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('name', models.CharField(max_length=256, verbose_name='name')),
                ('description', models.CharField(blank=True, max_length=256, null=True, verbose_name='description')),
                ('level', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Skill level')),
                ('privacy', models.CharField(choices=[('anyone', 'Anyone'), ('users', 'All Users'), ('friends', 'All Friends'), ('students', 'All Students'), ('teachers', 'All Teachers'), ('employees', 'All Employees'), ('managers', 'All Managers'), ('me', 'Only Me')], default='anyone', help_text='Designates who can see this information.', max_length=128, verbose_name='privacy')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='intranet_persons.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('title', models.CharField(max_length=256, verbose_name='title')),
                ('description', models.CharField(blank=True, max_length=256, null=True, verbose_name='description')),
                ('publisher', models.CharField(blank=True, max_length=256, null=True, verbose_name='publisher')),
                ('date_published', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='published date')),
                ('document_link', models.URLField(blank=True, help_text='provide support document link', null=True, verbose_name='document link')),
                ('privacy', models.CharField(choices=[('anyone', 'Anyone'), ('users', 'All Users'), ('friends', 'All Friends'), ('students', 'All Students'), ('teachers', 'All Teachers'), ('employees', 'All Employees'), ('managers', 'All Managers'), ('me', 'Only Me')], default='anyone', help_text='Designates who can see this information.', max_length=128, verbose_name='privacy')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publications', to='intranet_persons.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField(default=True, verbose_name='primary')),
                ('name', models.CharField(choices=[('home', 'Home'), ('office', 'Office')], default='home', help_text='E.g. Home Address or Office Address', max_length=256, null=True, verbose_name='name')),
                ('street', models.CharField(blank=True, max_length=512, null=True, verbose_name='street')),
                ('city', models.CharField(blank=True, max_length=128, null=True, verbose_name='city')),
                ('province', models.CharField(blank=True, max_length=128, null=True, verbose_name='province')),
                ('country', models.CharField(blank=True, max_length=128, null=True, verbose_name='country')),
                ('zipcode', models.CharField(blank=True, max_length=128, null=True, verbose_name='zip code')),
                ('privacy', models.CharField(choices=[('anyone', 'Anyone'), ('users', 'All Users'), ('friends', 'All Friends'), ('students', 'All Students'), ('teachers', 'All Teachers'), ('employees', 'All Employees'), ('managers', 'All Managers'), ('me', 'Only Me')], default='anyone', help_text='Designates who can see this information.', max_length=128, verbose_name='privacy')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='intranet_persons.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NonFormalEducation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('institution', models.CharField(max_length=256, verbose_name='institution')),
                ('date_start', models.DateField(default=django.utils.timezone.now, verbose_name='date start')),
                ('date_end', models.DateField(default=django.utils.timezone.now, verbose_name='date end')),
                ('document_link', models.URLField(blank=True, help_text='Provide support document link', null=True, verbose_name='document link')),
                ('privacy', models.CharField(choices=[('anyone', 'Anyone'), ('users', 'All Users'), ('friends', 'All Friends'), ('students', 'All Students'), ('teachers', 'All Teachers'), ('employees', 'All Employees'), ('managers', 'All Managers'), ('me', 'Only Me')], default='anyone', help_text='Designates who can see this information.', max_length=128, verbose_name='privacy')),
                ('description', models.CharField(blank=True, max_length=256, null=True, verbose_name='description')),
                ('status', models.CharField(choices=[('FNS', 'Finished'), ('ONG', 'Ongoing'), ('UNF', 'Unfinished')], default='ONG', max_length=5, verbose_name='current status')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='non_formal_educations', to='intranet_persons.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FormalEducation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('institution', models.CharField(max_length=256, verbose_name='institution')),
                ('date_start', models.DateField(default=django.utils.timezone.now, verbose_name='date start')),
                ('date_end', models.DateField(default=django.utils.timezone.now, verbose_name='date end')),
                ('document_link', models.URLField(blank=True, help_text='Provide support document link', null=True, verbose_name='document link')),
                ('privacy', models.CharField(choices=[('anyone', 'Anyone'), ('users', 'All Users'), ('friends', 'All Friends'), ('students', 'All Students'), ('teachers', 'All Teachers'), ('employees', 'All Employees'), ('managers', 'All Managers'), ('me', 'Only Me')], default='anyone', help_text='Designates who can see this information.', max_length=128, verbose_name='privacy')),
                ('major', models.CharField(blank=True, help_text='ex: Information System or Accounting', max_length=256, null=True, verbose_name='major')),
                ('status', models.CharField(choices=[('FNS', 'Finished'), ('ONG', 'Ongoing'), ('UNF', 'Unfinished')], default='ONG', max_length=5, verbose_name='current status')),
                ('level', models.PositiveIntegerField(choices=[(0, 'SD'), (1, 'SMP'), (2, 'SMA'), (3, 'D1'), (4, 'D2'), (5, 'D3'), (6, 'D4'), (7, 'S1'), (8, 'S2'), (9, 'S3')], default=7, verbose_name='level')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='formal_educations', to='intranet_persons.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('relation', models.PositiveIntegerField(choices=[(1, 'Father'), (2, 'Mother'), (5, 'Husband'), (6, 'Wife'), (4, 'Children'), (3, 'Sibling'), (99, 'Other')], default=99, verbose_name='relation')),
                ('relationship', models.CharField(blank=True, max_length=256, null=True, verbose_name='other relation')),
                ('name', models.CharField(max_length=256, verbose_name='name')),
                ('date_of_birth', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date of birth')),
                ('place_of_birth', models.CharField(blank=True, max_length=255, null=True, verbose_name='place of birth')),
                ('job', models.CharField(max_length=256, verbose_name='job')),
                ('address', models.TextField(blank=True, max_length=512, null=True, verbose_name='address')),
                ('privacy', models.CharField(choices=[('anyone', 'Anyone'), ('users', 'All Users'), ('friends', 'All Friends'), ('students', 'All Students'), ('teachers', 'All Teachers'), ('employees', 'All Employees'), ('managers', 'All Managers'), ('me', 'Only Me')], default='anyone', help_text='Designates who can see this information.', max_length=128, verbose_name='privacy')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='families', to='intranet_persons.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=128, null=True, verbose_name='phone')),
                ('fax', models.CharField(blank=True, max_length=128, null=True, verbose_name='fax')),
                ('email', models.CharField(blank=True, help_text='your public email', max_length=128, null=True, verbose_name='email')),
                ('whatsapp', models.CharField(blank=True, max_length=128, null=True, verbose_name='whatsapp')),
                ('website', models.CharField(blank=True, max_length=128, null=True, verbose_name='website')),
                ('privacy', models.CharField(choices=[('anyone', 'Anyone'), ('users', 'All Users'), ('friends', 'All Friends'), ('students', 'All Students'), ('teachers', 'All Teachers'), ('employees', 'All Employees'), ('managers', 'All Managers'), ('me', 'Only Me')], default='anyone', help_text='Designates who can see this information.', max_length=128, verbose_name='privacy')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='intranet_persons.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('name', models.CharField(max_length=256, verbose_name='name')),
                ('description', models.TextField(blank=True, max_length=256, null=True, verbose_name='description')),
                ('date', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='created date')),
                ('document_link', models.URLField(blank=True, help_text='Provide support document link', null=True, verbose_name='document link')),
                ('privacy', models.CharField(choices=[('anyone', 'Anyone'), ('users', 'All Users'), ('friends', 'All Friends'), ('students', 'All Students'), ('teachers', 'All Teachers'), ('employees', 'All Employees'), ('managers', 'All Managers'), ('me', 'Only Me')], default='anyone', help_text='Designates who can see this information.', max_length=128, verbose_name='privacy')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='awards', to='intranet_persons.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
